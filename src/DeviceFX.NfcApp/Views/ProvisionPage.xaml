<?xml version="1.0" encoding="utf-8"?>

<shared:StepContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                        xmlns:shared="clr-namespace:DeviceFX.NfcApp.Views.Shared"
                        xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
                        xmlns:model="clr-namespace:DeviceFX.NfcApp.Model"
                        xmlns:converters="clr-namespace:DeviceFX.NfcApp.Helpers.Converters"
                        xmlns:helpers="clr-namespace:DeviceFX.NfcApp.Helpers"
                        Priority="30"
                        Group="Provision"
                        Title="Provision"
                        x:Class="DeviceFX.NfcApp.Views.ProvisionPage">
    <shared:StepContentPage.Resources>
        <ResourceDictionary>
            <helpers:ActivationCodeFormatter x:Key="CodeFormatter" />
            <ResourceDictionary x:Key="NextTextMapper">
                <x:String x:Key="Success">Done</x:String>
            </ResourceDictionary>
            <ResourceDictionary x:Key="NextImageMapper">
                <x:String x:Key="Success"></x:String>
            </ResourceDictionary>
            <ResourceDictionary x:Key="BackTextMapper">
                <x:String x:Key="Success">Repeat</x:String>
            </ResourceDictionary>
            <converters:StringMapperConverter x:Key="NextStringConverter" DefaultValue="Scan"/>
            <converters:StringMapperConverter x:Key="NextImageConverter" DefaultValue="nfc_icon.png"/>
            <converters:StringMapperConverter x:Key="BackStringConverter" DefaultValue="Back"/>
            <toolkit:IsNotNullConverter x:Key="IsNotNullConverter" />
            <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />
            <toolkit:EnumToBoolConverter x:Key="OperationSuccessConverter">
                <toolkit:EnumToBoolConverter.TrueValues>
                    <model:OperationState>Success</model:OperationState>
                </toolkit:EnumToBoolConverter.TrueValues>
            </toolkit:EnumToBoolConverter>
            <toolkit:EnumToBoolConverter x:Key="OperationFailureConverter">
                <toolkit:EnumToBoolConverter.TrueValues>
                    <model:OperationState>Failure</model:OperationState>
                </toolkit:EnumToBoolConverter.TrueValues>
            </toolkit:EnumToBoolConverter>
            <toolkit:EnumToBoolConverter x:Key="OperationInProgressConverter">
                <toolkit:EnumToBoolConverter.TrueValues>
                    <model:OperationState>InProgress</model:OperationState>
                </toolkit:EnumToBoolConverter.TrueValues>
            </toolkit:EnumToBoolConverter>
        </ResourceDictionary>
        <Style TargetType="Label">
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="TextColor" Value="Black"></Setter>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CheckedStates">
                        <VisualState x:Name="Checked">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                <Setter Property="TextColor" Value="White" />
                                <!-- <Setter Property="BorderColor" Value="#005EA6" /> -->
                                <!-- <Setter Property="BorderWidth" Value="2" /> -->
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightGray" />
                                <Setter Property="TextColor" Value="Black" />
                                <!-- <Setter Property="BorderColor" Value="#005EA6" /> -->
                                <!-- <Setter Property="BorderWidth" Value="2" /> -->
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
            <!-- Remove the default checkmark -->
            <Setter Property="ControlTemplate">
                <ControlTemplate>
                    <Border Stroke="{TemplateBinding BorderColor}"
                            StrokeThickness="{TemplateBinding BorderWidth}"
                            BackgroundColor="{TemplateBinding BackgroundColor}">
                        <Label Text="{TemplateBinding Content}"
                               TextColor="{TemplateBinding TextColor}"
                               HorizontalOptions="Center"
                               VerticalOptions="Center"
                               Padding="10,5" />
                    </Border>
                </ControlTemplate>
            </Setter>
        </Style>
    </shared:StepContentPage.Resources>
    <ContentPage.Content>
        <Grid Padding="15" RowDefinitions="Auto, Auto, Auto, *, 50" RowSpacing="10">
            <Border Grid.Row="0" BackgroundColor="LightGray" StrokeShape="RoundRectangle 10">
                <VerticalStackLayout Spacing="20" Padding="10">
                    <Label Text="{Binding SearchSelection.Type, StringFormat='Webex {0}'}" FontSize="22" TextDecorations="Underline" HorizontalTextAlignment="Center"></Label>
                    <HorizontalStackLayout>
                        <Label Text="Name: "></Label>
                        <Label Text="{Binding SearchSelection.Name}"></Label>
                    </HorizontalStackLayout>
                    <HorizontalStackLayout IsVisible="{Binding SearchSelection.Number, Converter={StaticResource IsNotNullConverter}}">
                        <Label Text="Number: "></Label>
                        <Label Text="{Binding SearchSelection.Number}"></Label>
                    </HorizontalStackLayout>
                    <HorizontalStackLayout IsVisible="{Binding SearchSelection.Number, Converter={StaticResource IsNotNullConverter}}">
                        <Label Text="Mode: " VerticalTextAlignment="Center" ></Label>
                        <Border StrokeShape="RoundRectangle 10" Stroke="Black">
                            <HorizontalStackLayout>
                                <RadioButton Content="MAC" FontSize="18" IsChecked="{Binding IsModelSelected, Converter={StaticResource InvertedBoolConverter}}"/>
                                <RadioButton Content="Activation" FontSize="18" IsChecked="{Binding IsModelSelected}"/>
                            </HorizontalStackLayout>
                        </Border>
                    </HorizontalStackLayout>
                    <HorizontalStackLayout IsVisible="{Binding IsModelSelected}">
                        <HorizontalStackLayout.Margin>
                            <OnPlatform x:TypeArguments="Thickness">
                                <On Platform="iOS" Value="0,-8,0,0" />
                                <On Platform="Android" Value="0,-8,0,0" />
                            </OnPlatform>                            
                        </HorizontalStackLayout.Margin>
                        <Label Text="Model: " VerticalTextAlignment="Center"></Label>
                        <Picker Title="Select Model" MaximumHeightRequest="{OnPlatform iOS=30, Android=44}" MinimumWidthRequest="150" FontSize="20" FontAttributes="Italic" ItemsSource="{Binding Models}" SelectedItem="{Binding ProvisionModel, Mode=TwoWay}">
                        </Picker>
                    </HorizontalStackLayout>
                    <HorizontalStackLayout IsVisible="{Binding IsCodeVisible}">
                        <Label Text="Code: " VerticalTextAlignment="Center"></Label>
                        <Label Text="{Binding ProvisionActivationCode, Converter={StaticResource CodeFormatter}}" VerticalTextAlignment="Center"></Label>
                    </HorizontalStackLayout>
                </VerticalStackLayout>
            </Border>
            <ActivityIndicator Grid.Row="2" Scale="{OnPlatform 1.0, iOS=2.0}"
                               IsVisible="{Binding Operation.State, Converter={StaticResource OperationInProgressConverter}}"
                               IsRunning="{Binding Operation.State, Converter={StaticResource OperationInProgressConverter}}"></ActivityIndicator>
            <Border Grid.Row="2" BackgroundColor="LightGray" StrokeShape="RoundRectangle 10" IsVisible="{Binding Operation.State, Converter={StaticResource OperationSuccessConverter}}">
                <VerticalStackLayout Padding="10" Spacing="20" IsVisible="{Binding Operation.State, Converter={StaticResource OperationSuccessConverter}}">
                    <Label Text="Phone" FontSize="22" TextDecorations="Underline" HorizontalTextAlignment="Center"></Label>
                    <HorizontalStackLayout>
                        <Label Text="Mac: "></Label>
                        <Label Text="{Binding Operation.Phone.Mac}"></Label>
                    </HorizontalStackLayout>
                    <HorizontalStackLayout>
                        <Label Text="Model: "></Label>
                        <Label Text="{Binding Operation.Phone.Pid}"></Label>
                    </HorizontalStackLayout>
                    <HorizontalStackLayout>
                        <Label Text="Serial: "></Label>
                        <Label Text="{Binding Operation.Phone.Serial}"></Label>
                    </HorizontalStackLayout>
                    <VerticalStackLayout Spacing="10">
                        <Label Text="Result" FontSize="22" TextDecorations="Underline" HorizontalTextAlignment="Center"></Label>
                        <Label Text="Success" TextColor="Green" HorizontalTextAlignment="Center"></Label>
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Border>
            <Border Grid.Row="2" BackgroundColor="LightGray" StrokeShape="RoundRectangle 10" IsVisible="{Binding Operation.State, Converter={StaticResource OperationFailureConverter}}">
                <VerticalStackLayout Padding="10" Spacing="20" IsVisible="{Binding Operation.State, Converter={StaticResource OperationFailureConverter}}">
                    <Label Text="Phone" FontSize="22" TextDecorations="Underline" HorizontalTextAlignment="Center"></Label>
                    <HorizontalStackLayout IsVisible="{Binding Operation.Phone.Mac, Converter= {StaticResource IsNotNullConverter}}">
                        <Label Text="Mac: "></Label>
                        <Label Text="{Binding Operation.Phone.Mac}"></Label>
                    </HorizontalStackLayout>
                    <HorizontalStackLayout IsVisible="{Binding Operation.Phone.Pid, Converter= {StaticResource IsNotNullConverter}}">
                        <Label Text="Model: "></Label>
                        <Label Text="{Binding Operation.Phone.Pid}"></Label>
                    </HorizontalStackLayout>
                    <HorizontalStackLayout IsVisible="{Binding Operation.Phone.Serial, Converter= {StaticResource IsNotNullConverter}}">
                        <Label Text="Serial: "></Label>
                        <Label Text="{Binding Operation.Phone.Serial}"></Label>
                    </HorizontalStackLayout>
                    <VerticalStackLayout Spacing="10">
                        <Label Text="Error" FontSize="22" TextDecorations="Underline" HorizontalTextAlignment="Center"></Label>
                        <Label Text="{Binding Operation.Result}" TextColor="Red" HorizontalTextAlignment="Center"></Label>
                    </VerticalStackLayout>
                </VerticalStackLayout>
            </Border>
            <shared:NavigationButtonsView Grid.Row="4"
                                          x:Name="NavigationButtons"
                                          BackCommand="{Binding ProvisionBackCommand}"
                                          BackParameter="Search"
                                          BackButtonText="{Binding Operation.State, Converter={StaticResource BackStringConverter}, ConverterParameter={StaticResource BackTextMapper}, Mode=OneWay}"
                                          NextButtonText="{Binding Operation.State, Converter={StaticResource NextStringConverter}, ConverterParameter={StaticResource NextTextMapper}, Mode=OneWay}"
                                          NextCommand="{Binding ProvisionCommand}" 
                                          NextButtonImageSource="{Binding Operation.State, Converter={StaticResource NextImageConverter}, ConverterParameter={StaticResource NextImageMapper}, Mode=OneWay}" />
        </Grid>
    </ContentPage.Content>
</shared:StepContentPage>